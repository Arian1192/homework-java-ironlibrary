# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE}}
          MYSQL_USERNAME: ${{secrets.MYSQL_USERNAME}}
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Configure MySQL User
        run: |
          echo "CREATE USER 'runner'@'172.18.0.1';" > create_user.sql
          echo "FLUSH PRIVILEGES;" >> create_user.sql
          mysql -h 172.18.0.1 -P 3306 -u root -p root < create_user.sql


      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Run unit tests
        run : mvn test --file pom.xml


